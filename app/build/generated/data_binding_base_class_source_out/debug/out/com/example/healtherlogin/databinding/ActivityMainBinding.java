// Generated by view binder compiler. Do not edit!
package com.example.healtherlogin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.healtherlogin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnInsert;

  @NonNull
  public final Button btnSelect;

  @NonNull
  public final Button btnUpdate;

  @NonNull
  public final CheckBox checkAge;

  @NonNull
  public final CheckBox checkMan;

  @NonNull
  public final CheckBox checkName;

  @NonNull
  public final CheckBox checkUserid;

  @NonNull
  public final CheckBox checkWoman;

  @NonNull
  public final ListView dbListView;

  @NonNull
  public final EditText editAge;

  @NonNull
  public final EditText editId;

  @NonNull
  public final EditText editName;

  @NonNull
  public final View line1;

  @NonNull
  public final View line2;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final TextView textAge;

  @NonNull
  public final TextView textGender;

  @NonNull
  public final TextView textId;

  @NonNull
  public final TextView textName;

  @NonNull
  public final TextView textSort;

  private ActivityMainBinding(@NonNull RelativeLayout rootView, @NonNull Button btnInsert,
      @NonNull Button btnSelect, @NonNull Button btnUpdate, @NonNull CheckBox checkAge,
      @NonNull CheckBox checkMan, @NonNull CheckBox checkName, @NonNull CheckBox checkUserid,
      @NonNull CheckBox checkWoman, @NonNull ListView dbListView, @NonNull EditText editAge,
      @NonNull EditText editId, @NonNull EditText editName, @NonNull View line1,
      @NonNull View line2, @NonNull ScrollView scrollView, @NonNull TextView textAge,
      @NonNull TextView textGender, @NonNull TextView textId, @NonNull TextView textName,
      @NonNull TextView textSort) {
    this.rootView = rootView;
    this.btnInsert = btnInsert;
    this.btnSelect = btnSelect;
    this.btnUpdate = btnUpdate;
    this.checkAge = checkAge;
    this.checkMan = checkMan;
    this.checkName = checkName;
    this.checkUserid = checkUserid;
    this.checkWoman = checkWoman;
    this.dbListView = dbListView;
    this.editAge = editAge;
    this.editId = editId;
    this.editName = editName;
    this.line1 = line1;
    this.line2 = line2;
    this.scrollView = scrollView;
    this.textAge = textAge;
    this.textGender = textGender;
    this.textId = textId;
    this.textName = textName;
    this.textSort = textSort;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_insert;
      Button btnInsert = ViewBindings.findChildViewById(rootView, id);
      if (btnInsert == null) {
        break missingId;
      }

      id = R.id.btn_select;
      Button btnSelect = ViewBindings.findChildViewById(rootView, id);
      if (btnSelect == null) {
        break missingId;
      }

      id = R.id.btn_update;
      Button btnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.check_age;
      CheckBox checkAge = ViewBindings.findChildViewById(rootView, id);
      if (checkAge == null) {
        break missingId;
      }

      id = R.id.check_man;
      CheckBox checkMan = ViewBindings.findChildViewById(rootView, id);
      if (checkMan == null) {
        break missingId;
      }

      id = R.id.check_name;
      CheckBox checkName = ViewBindings.findChildViewById(rootView, id);
      if (checkName == null) {
        break missingId;
      }

      id = R.id.check_userid;
      CheckBox checkUserid = ViewBindings.findChildViewById(rootView, id);
      if (checkUserid == null) {
        break missingId;
      }

      id = R.id.check_woman;
      CheckBox checkWoman = ViewBindings.findChildViewById(rootView, id);
      if (checkWoman == null) {
        break missingId;
      }

      id = R.id.db_list_view;
      ListView dbListView = ViewBindings.findChildViewById(rootView, id);
      if (dbListView == null) {
        break missingId;
      }

      id = R.id.edit_age;
      EditText editAge = ViewBindings.findChildViewById(rootView, id);
      if (editAge == null) {
        break missingId;
      }

      id = R.id.edit_id;
      EditText editId = ViewBindings.findChildViewById(rootView, id);
      if (editId == null) {
        break missingId;
      }

      id = R.id.edit_name;
      EditText editName = ViewBindings.findChildViewById(rootView, id);
      if (editName == null) {
        break missingId;
      }

      id = R.id.line1;
      View line1 = ViewBindings.findChildViewById(rootView, id);
      if (line1 == null) {
        break missingId;
      }

      id = R.id.line2;
      View line2 = ViewBindings.findChildViewById(rootView, id);
      if (line2 == null) {
        break missingId;
      }

      id = R.id.scroll_view;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.text_age;
      TextView textAge = ViewBindings.findChildViewById(rootView, id);
      if (textAge == null) {
        break missingId;
      }

      id = R.id.text_gender;
      TextView textGender = ViewBindings.findChildViewById(rootView, id);
      if (textGender == null) {
        break missingId;
      }

      id = R.id.text_id;
      TextView textId = ViewBindings.findChildViewById(rootView, id);
      if (textId == null) {
        break missingId;
      }

      id = R.id.text_name;
      TextView textName = ViewBindings.findChildViewById(rootView, id);
      if (textName == null) {
        break missingId;
      }

      id = R.id.text_sort;
      TextView textSort = ViewBindings.findChildViewById(rootView, id);
      if (textSort == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, btnInsert, btnSelect, btnUpdate,
          checkAge, checkMan, checkName, checkUserid, checkWoman, dbListView, editAge, editId,
          editName, line1, line2, scrollView, textAge, textGender, textId, textName, textSort);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
